{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\schneegestoeber\\\\src\\\\DoorStory.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/* import React, { useState, useContext } from \"react\";\r\n */\nimport React, { useContext } from \"react\";\nimport story from \"./img/story.png\";\nimport UserContext from \"./Counter.js\";\nimport ChangeContext from './Change.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contentadditional1 = \"Test1: below or equal to 7\";\nconst contentadditional2 = \"Test2: 7-12\";\nconst contentadditional3 = \"Test3: 13-17\";\nconst contentadditional4 = \"Test4: 18+\";\nconst contentmain = \"Test\";\nconst title = \"1: The door\";\nconst shorttitle = \"1\";\nconst roll = \"Dexterity saving throw\";\n\nfunction useStickyState(defaultValue, key) {\n  _s();\n\n  const [value, setValue] = React.useState(() => {\n    const stickyValue = window.localStorage.getItem(key);\n    return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n  });\n  React.useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n}\n\n_s(useStickyState, \"qWaeK8RZ/4vHwQZ1RtAOmV3H8Kw=\");\n\nconst isActivestore = \"isActivestore\" + shorttitle;\nconst contentstore = \"contentstore\" + shorttitle;\nconst numberrolledstore = \"numberrolledstore\" + shorttitle;\nconst inspirationcheckedstore = \"inspirationcheckedstore\" + shorttitle;\nconst nat20checkedstore = \"nat20checkedstore\" + shorttitle;\nexport default function Door() {\n  _s2();\n\n  const [isActive, setActive] = useStickyState(true, isActivestore);\n  const [content, setValue] = useStickyState(null, contentstore);\n  const [numberrolled, setNumber] = useStickyState(\" \", numberrolledstore);\n  const [inspirationchecked, setInsp] = useStickyState(false, inspirationcheckedstore);\n  const [nat20checked, setCheck] = useStickyState(false, nat20checkedstore);\n  const counter = useContext(UserContext);\n  const change = useContext(ChangeContext);\n  const inspirationid = \"inspirationchecked\" + shorttitle;\n  const nat20id = \"nat20checked\" + shorttitle;\n\n  const handleToggle = () => {\n    setActive(!isActive);\n  };\n\n  React.useEffect(() => {\n    let element = document.getElementById(inspirationid);\n\n    if (inspirationchecked === true) {\n      element.setAttribute(\"checked\", \"\");\n    } else {\n      element.removeAttribute(\"checked\");\n    }\n  });\n  React.useEffect(() => {\n    let element = document.getElementById(nat20id);\n\n    if (nat20checked === true) {\n      element.setAttribute(\"checked\", \"\");\n    } else {\n      element.removeAttribute(\"checked\");\n    }\n  });\n\n  function changeContent(roll) {\n    let contentadditionalrolled;\n\n    if (roll < 7) {\n      /*       console.log(\"bad roll :( \" + contentadditional1); */\n      contentadditionalrolled = contentadditional1;\n      setValue(contentadditionalrolled);\n    } else if (roll > 6 && roll < 13) {\n      /*       console.log(\"better role :/ \" + contentadditional2); */\n      contentadditionalrolled = contentadditional2;\n      setValue(contentadditionalrolled);\n    } else if (roll > 12 && roll < 18) {\n      /*       console.log(\"good role :) \" + contentadditional3); */\n      contentadditionalrolled = contentadditional3;\n      setValue(contentadditionalrolled);\n    } else if (roll > 17) {\n      /*       console.log(\"awesome role :D \" + contentadditional4); */\n      contentadditionalrolled = contentadditional4;\n      setValue(contentadditionalrolled);\n    } else {\n      return \"\";\n    }\n  }\n\n  function Insp() {\n    if (inspirationchecked === true && nat20checked === false) {\n      let counterfunction = counter.count - 1;\n\n      if (counterfunction < 0) {\n        counterfunction = 0;\n        window.confirm(\"Looks like you do not have enough inspiration dice!\");\n        setNumber(\"\");\n      }\n\n      counter.count = counterfunction;\n      console.log(\"counter.count: \" + counter.count);\n      const image = document.getElementById(\"d20\");\n      image.src = counter.count + \".png\";\n      change.changer = 1;\n      console.log(\"change: \" + change.changer);\n    }\n\n    if (nat20checked === true && inspirationchecked === false) {\n      let counterfunction = counter.count + 1;\n\n      if (counterfunction > 12) {\n        counterfunction = 12;\n        window.confirm('\"The proximity of a desirable thing tempts one to overindulgence\". You may not have more than 12 inspiration dice.');\n      }\n\n      counter.count = counterfunction;\n      console.log(\"counter.count: \" + counter.count);\n      const image = document.getElementById(\"d20\");\n      image.src = counter.count + \".png\";\n      change.changer = 1;\n      console.log(\"change: \" + change.changer);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calender\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: isActive ? \"door\" : \"doorOpen\",\n      onClick: handleToggle,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"door_title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"shorttitle\",\n          children: shorttitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"separation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: story,\n        alt: \"story\",\n        className: \"icons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isActive ? \"doorContentEmpty\" : \"doorContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: contentmain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roll\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rollDescription\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Please make a \", roll, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"rollNumber\",\n              min: \"-5\",\n              max: \"30\",\n              step: \"1\",\n              value: numberrolled,\n              onChange: event => setNumber(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rollCheck\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: inspirationid,\n              className: \"checkbox\",\n              onClick: () => setInsp(!inspirationchecked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inspiration1\",\n              children: \"Inspiration dice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rollCheck\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: nat20id,\n              className: \"checkbox\",\n              onClick: () => setCheck(!nat20checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"nat201\",\n              children: \"Nat 20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"rollButton\",\n            onClick: () => {\n              Insp();\n              changeContent(numberrolled);\n            },\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"rollresult\",\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Door, \"cYv51xhLEKTNrMwhnIIDP/fYvi0=\", false, function () {\n  return [useStickyState, useStickyState, useStickyState, useStickyState, useStickyState];\n});\n\n_c = Door;\n\nvar _c;\n\n$RefreshReg$(_c, \"Door\");","map":{"version":3,"sources":["C:/xampp/htdocs/schneegestoeber/src/DoorStory.js"],"names":["React","useContext","story","UserContext","ChangeContext","contentadditional1","contentadditional2","contentadditional3","contentadditional4","contentmain","title","shorttitle","roll","useStickyState","defaultValue","key","value","setValue","useState","stickyValue","window","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","isActivestore","contentstore","numberrolledstore","inspirationcheckedstore","nat20checkedstore","Door","isActive","setActive","content","numberrolled","setNumber","inspirationchecked","setInsp","nat20checked","setCheck","counter","change","inspirationid","nat20id","handleToggle","element","document","getElementById","setAttribute","removeAttribute","changeContent","contentadditionalrolled","Insp","counterfunction","count","confirm","console","log","image","src","changer","event","target"],"mappings":"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","sourcesContent":["/* import React, { useState, useContext } from \"react\";\r\n */\r\nimport React, {useContext} from \"react\"\r\nimport story from \"./img/story.png\"\r\nimport UserContext from \"./Counter.js\"\r\nimport ChangeContext from './Change.js'\r\n\r\nconst contentadditional1 = \"Test1: below or equal to 7\"\r\nconst contentadditional2 = \"Test2: 7-12\"\r\nconst contentadditional3 = \"Test3: 13-17\"\r\nconst contentadditional4 = \"Test4: 18+\"\r\n\r\nconst contentmain = \"Test\";\r\nconst title = \"1: The door\";\r\nconst shorttitle = \"1\";\r\nconst roll = \"Dexterity saving throw\";\r\n\r\nfunction useStickyState(defaultValue, key) {\r\n  const [value, setValue] = React.useState(() => {\r\n    const stickyValue = window.localStorage.getItem(key);\r\n    return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\r\n  });\r\n  React.useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n  return [value, setValue];\r\n}\r\n\r\nconst isActivestore = \"isActivestore\"+shorttitle\r\nconst contentstore = \"contentstore\"+shorttitle\r\nconst numberrolledstore = \"numberrolledstore\"+shorttitle\r\nconst inspirationcheckedstore = \"inspirationcheckedstore\"+shorttitle\r\nconst nat20checkedstore = \"nat20checkedstore\"+shorttitle\r\n\r\n\r\nexport default function Door() {\r\n  const [isActive, setActive] = useStickyState(true, isActivestore);\r\n  const [content, setValue] = useStickyState(null, contentstore);\r\n  const [numberrolled, setNumber] = useStickyState(\" \", numberrolledstore);\r\n  const [inspirationchecked, setInsp] = useStickyState(false,inspirationcheckedstore);\r\n  const [nat20checked, setCheck] = useStickyState(false, nat20checkedstore);\r\n\r\n\r\n\r\n  const counter = useContext(UserContext)\r\n  const change = useContext(ChangeContext)\r\n  const inspirationid=\"inspirationchecked\"+shorttitle\r\n  const nat20id=\"nat20checked\"+shorttitle\r\n\r\n  const handleToggle = () => {\r\n    setActive(!isActive)\r\n  };\r\n\r\n  React.useEffect(() => { \r\n    let element = document.getElementById(inspirationid)\r\n    if (inspirationchecked === true) {\r\n      element.setAttribute(\"checked\",\"\");\r\n    } else {\r\n      element.removeAttribute(\"checked\");\r\n    }\r\n  })\r\n\r\n  React.useEffect(() => { \r\n    let element = document.getElementById(nat20id)\r\n    if (nat20checked === true) {\r\n      element.setAttribute(\"checked\",\"\");\r\n    } else {\r\n      element.removeAttribute(\"checked\");\r\n    }\r\n  })\r\n\r\n\r\n  function changeContent(roll) {\r\n    let contentadditionalrolled;\r\n    if (roll < 7) {\r\n/*       console.log(\"bad roll :( \" + contentadditional1); */\r\n      contentadditionalrolled = contentadditional1;\r\n      setValue(contentadditionalrolled);\r\n    } else if (roll > 6 && roll < 13) {\r\n/*       console.log(\"better role :/ \" + contentadditional2); */\r\n      contentadditionalrolled = contentadditional2;\r\n      setValue(contentadditionalrolled);\r\n    } else if (roll > 12 && roll < 18) {\r\n/*       console.log(\"good role :) \" + contentadditional3); */\r\n      contentadditionalrolled = contentadditional3;\r\n      setValue(contentadditionalrolled);\r\n    } else if (roll > 17) {\r\n/*       console.log(\"awesome role :D \" + contentadditional4); */\r\n      contentadditionalrolled = contentadditional4;\r\n      setValue(contentadditionalrolled);\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  function Insp() {\r\n    if (inspirationchecked === true && nat20checked === false) {\r\n      let counterfunction = counter.count -1\r\n      if (counterfunction < 0) {\r\n        counterfunction=0\r\n        window.confirm(\"Looks like you do not have enough inspiration dice!\");\r\n        setNumber(\"\");\r\n      }\r\n      counter.count=counterfunction\r\n      console.log(\"counter.count: \"+counter.count);\r\n      const image = document.getElementById(\"d20\");\r\n      image.src = counter.count + \".png\";\r\n      change.changer = 1\r\n      console.log(\"change: \"+change.changer);\r\n    }\r\n\r\n    if (nat20checked === true && inspirationchecked === false) {\r\n      let counterfunction = counter.count +1\r\n      if (counterfunction> 12) {\r\n        counterfunction = 12\r\n        window.confirm(\r\n          '\"The proximity of a desirable thing tempts one to overindulgence\". You may not have more than 12 inspiration dice.'\r\n        );\r\n      }\r\n      counter.count=counterfunction\r\n      console.log(\"counter.count: \"+counter.count);\r\n      const image = document.getElementById(\"d20\");\r\n      image.src = counter.count + \".png\";\r\n      change.changer = 1\r\n      console.log(\"change: \"+change.changer);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"calender\">\r\n      <div className={isActive ? \"door\" : \"doorOpen\"} onClick={handleToggle}>\r\n        <h3 className=\"door_title\">\r\n          <span className=\"title\">{title}</span>\r\n          <span className=\"shorttitle\">{shorttitle}</span>\r\n        </h3>\r\n        <hr className=\"separation\"></hr>\r\n        <img src={story} alt=\"story\" className=\"icons\"></img>\r\n      </div>\r\n      <div className={isActive ? \"doorContentEmpty\" : \"doorContent\"}>\r\n        <p>{contentmain}</p>\r\n        <div>\r\n          <div className=\"roll\">\r\n            <div className=\"rollDescription\">\r\n              <p>Please make a {roll}:</p>\r\n              <input\r\n                type=\"number\"\r\n                className=\"rollNumber\"\r\n                min=\"-5\"\r\n                max=\"30\"\r\n                step=\"1\"\r\n                value={numberrolled}\r\n                onChange={(event) => setNumber(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"rollCheck\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id={inspirationid}\r\n                className=\"checkbox\"\r\n                onClick={() => setInsp(!inspirationchecked)}\r\n              />\r\n              <label htmlFor=\"inspiration1\">Inspiration dice</label>\r\n            </div>\r\n            <div className=\"rollCheck\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id={nat20id}\r\n                className=\"checkbox\"\r\n                onClick={() => setCheck(!nat20checked)\r\n              }\r\n              />\r\n              <label htmlFor=\"nat201\">Nat 20</label>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"rollButton\"\r\n              onClick={() => {\r\n                Insp();\r\n                changeContent(numberrolled);\r\n              }}\r\n            >\r\n              Enter\r\n            </button>\r\n          </div>\r\n\r\n          <p className=\"rollresult\">{content}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}